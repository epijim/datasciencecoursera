theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*7.5),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi )-1000
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*7.5),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
# other way
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi )-10
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*7.5),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / (pi + 2)
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*7.5),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi )
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*7.5),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi ) /2
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*7.5),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi ) /3
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*7.5),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi )
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*2),shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi )
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*1.5), # adjust the 1.5 to suit
shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi )
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*1.5), # adjust the 1.5 to suit
shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
#scale_size_identity()+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*1.5), # adjust the 1.5 to suit
shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
coord_fixed(ratio=0.2)+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*1.5), # adjust the 1.5 to suit
shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
coord_fixed(ratio=0.4)+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*1.7), # adjust the 1.5 to suit
shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
coord_fixed(ratio=0.4)+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
attach(mydata)
mydata$Total <- Fellows + Students
mydata$p_under <- round((Students - Grads)*100 / Total, digits=0) # all rounded
mydata$p_post <- round(Grads*100 / Total, digits=0)
mydata$p_fellow <- round(Fellows*100 / Total, digits=0)
detach(mydata)
mydata <- mydata[,c("Percent_male","Percent_female","p_under", "p_post","p_fellow")]
mydata_long <- reshape(mydata, idvar = "College_id", ids = row.names(mydata),
times = names(mydata), timevar = "Characteristic",
varying = list(names(mydata)), direction = "long")
mydata_long$x <- as.numeric(as.factor(mydata_long$Characteristic))
mydata_long$y <- as.numeric(mydata_long$College_id)
# ggplot2 base layer
g <- ggplot(mydata_long)
mydata <- mydata[,c("Percent_male","Percent_female","p_under", "p_post","p_fellow")]
mydata_long <- reshape(mydata, idvar = "College_id", ids = row.names(mydata),
times = names(mydata), timevar = "Characteristic",
varying = list(names(mydata)), direction = "long")
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_x_continuous(breaks = 1:5,
labels=c("Category1", "Category2", "Category3","Category4","Category5")) +
scale_y_continuous(trans = "reverse") #+
#coord_fixed(ratio=0.2)
)
# Get percentage in each common room
attach(mydata)
mydata$Total <- Fellows + Students
mydata$p_under <- round((Students - Grads)*100 / Total, digits=0) # all rounded
mydata$p_post <- round(Grads*100 / Total, digits=0)
mydata$p_fellow <- round(Fellows*100 / Total, digits=0)
detach(mydata)
# Get percentage in each common room
attach(mydata)
mydata$Total <- Fellows + Students
mydata$p_under <- round((Students - Grads)*100 / Total, digits=0) # all rounded
mydata$p_post <- round(Grads*100 / Total, digits=0)
mydata$p_fellow <- round(Fellows*100 / Total, digits=0)
detach(mydata)
# rehape for plot
mydata <- mydata[,c("Percent_male","Percent_female","p_under", "p_post","p_fellow")]
mydata_long <- reshape(mydata, idvar = "College_id", ids = row.names(mydata),
times = names(mydata), timevar = "Characteristic",
varying = list(names(mydata)), direction = "long")
mydata_long$x <- as.numeric(as.factor(mydata_long$Characteristic))
mydata_long$y <- as.numeric(mydata_long$College_id)
# ggplot2 base layer
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_x_continuous(breaks = 1:5,
labels=c("Category1", "Category2", "Category3","Category4","Category5")) +
scale_y_continuous(trans = "reverse") #+
#coord_fixed(ratio=0.2)
)
# other way
mydata_long$radius <- sqrt( mydata_long$Percent_male / pi )
#You should play around with size of the points and text labels inside the plot to perfect fit.
ggplot(mydata_long,aes(x,y))+
geom_point(aes(size=radius*1.7), # adjust the 1.5 to suit
shape=21,fill="white")+
geom_text(aes(label=Percent_male),size=4)+
scale_size_identity()+
coord_fixed(ratio=0.4)+
theme(panel.grid.major=element_line(linetype=2,color="black"),
axis.text.x=element_text(angle=90,hjust=1,vjust=0))
# Get the data from my gist on github
#   note: readcsv() wasn't supporting ssl when this was written, which is
#   why I do the convuluted method
temporaryFile <- tempfile()
download.file("https://gist.githubusercontent.com/epijim/8819934/raw/6c76df80eb095065a9ce0fa4b8f94410ad528fed/college_data.csv"
,destfile=temporaryFile, method="curl")
mydata <- read.csv(temporaryFile)
# Get the data from my gist on github
#   note: readcsv() wasn't supporting ssl when this was written, which is
#   why I do the convuluted method
temporaryFile <- tempfile()
download.file("https://gist.githubusercontent.com/epijim/8819934/raw/6c76df80eb095065a9ce0fa4b8f94410ad528fed/college_data.csv"
,destfile=temporaryFile, method="curl")
mydata <- read.csv(temporaryFile)
# Get percentage in each common room
attach(mydata)
mydata$Total <- Fellows + Students
mydata$p_under <- round((Students - Grads)*100 / Total, digits=0) # all rounded
mydata$p_post <- round(Grads*100 / Total, digits=0)
mydata$p_fellow <- round(Fellows*100 / Total, digits=0)
detach(mydata)
# Get percentage in each common room
mydata$Total <- mydata$Fellows + mydata$Students
mydata$p_under <- round((mydata$Students - mydata$Grads)*100 / mydata$Total, digits=0) # all rounded
mydata$p_post <- round(mydata$Grads*100 / mydata$Total, digits=0)
mydata$p_fellow <- round(mydata$Fellows*100 / mydata$Total, digits=0)
source('~/.active-rstudio-document', echo=TRUE)
View(mydata)
View(mydata)
# Get the data from my gist on github
#   note: readcsv() wasn't supporting ssl when this was written, which is
#   why I do the convuluted method
temporaryFile <- tempfile()
download.file("https://gist.githubusercontent.com/epijim/8819934/raw/6c76df80eb095065a9ce0fa4b8f94410ad528fed/college_data.csv"
,destfile=temporaryFile, method="curl")
mydata <- read.csv(temporaryFile)
# Get percentage in each common room
mydata$Total <- mydata$Fellows + mydata$Students
mydata$p_under <- round((mydata$Students - mydata$Grads)*100 / mydata$Total, digits=0) # all rounded
mydata$p_post <- round(mydata$Grads*100 / mydata$Total, digits=0)
mydata$p_fellow <- round(mydata$Fellows*100 / mydata$Total, digits=0)
college_list <- list(mydata)
college_list <- list(mydata$College)
source('~/.active-rstudio-document', echo=TRUE)
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=list(college_list))+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
scale_y_continuous(trans = "reverse") #+
#coord_fixed(ratio=0.2)
)
source('~/.active-rstudio-document', echo=TRUE)
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
scale_y_continuous(trans = "reverse") #+
#coord_fixed(ratio=0.2)
)
college_list
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
scale_y_continuous(trans = "reverse") +
labs(size= "Nitrogen",
x = "My x label",
y = "My y label",
title = "Weighted Scatterplot of Watershed Area vs. Discharge and Nitrogen Levels (PPM)")
)
# Get the data from my gist on github
#   note: readcsv() wasn't supporting ssl when this was written, which is
#   why I do the convuluted method
temporaryFile <- tempfile()
download.file("https://gist.githubusercontent.com/epijim/8819934/raw/6c76df80eb095065a9ce0fa4b8f94410ad528fed/college_data.csv"
,destfile=temporaryFile, method="curl")
mydata1 <- read.csv(temporaryFile)
college_list <- as.character(mydata$College)
View(sort.data)
college_list <- mydata$College
college_list <- mydata1$College
college_list <- as.character(mydata1$College)
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
scale_y_continuous(trans = "reverse") +
labs(size= "Nitrogen",
x = "My x label",
y = "My y label",
title = "Weighted Scatterplot of Watershed Area vs. Discharge and Nitrogen Levels (PPM)")
)
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
scale_y_continuous(trans = "reverse") +
)
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
labs(size= "Nitrogen",
x = "My x label",
y = "My y label",
title = "Weighted Scatterplot of Watershed Area vs. Discharge and Nitrogen Levels (PPM)")
)
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
labs(size= "Nitrogen",
x = "My x label",
y = "My y label",
title = "Weighted Scatterplot of Watershed Area vs. Discharge and Nitrogen Levels (PPM)")
)
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
labs(size= "Nitrogen",
x = "My x label",
y = "My y label",
title = "Weighted Scatterplot of Watershed Area vs. Discharge and Nitrogen Levels (PPM)")
)
g <- ggplot(mydata_long)
# Bubble plots - edit limits and seq based on your data
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Male", "Female", "Undergrad","Postgrad","Fellow")) +
labs(size= "Percent",
colour="Percent",
x = "My x label",
y = "My y label",
title = "Weighted Scatterplot of Watershed Area vs. Discharge and Nitrogen Levels (PPM)")
)
(g + geom_point(aes(x = x, y = y,
size = Percent_male, colour = Percent_male),
shape=16, alpha=0.80) +
scale_colour_gradient(limits = c(0, 100), low="blue", high="red", breaks= seq(0, 100, by = 10))  +
scale_y_continuous(breaks = 1:31,
labels=college_list)+
scale_x_continuous(breaks = 1:5,
labels=c("Fellow", "Postgrad", "Undergrad","Female","Male")) +
labs(size= "Percent",
colour="Percent",
x = "My x label",
y = "My y label",
title = "Weighted Scatterplot of Watershed Area vs. Discharge and Nitrogen Levels (PPM)")
)
devtools::install_github('rCharts', 'ramnathv', ref='dev')
library(WDI)
library(rCharts)
library(plyr)
countries <- c("AL", "AT", "BE", "BA", "BG", "HR", "CZ", "DK", "FI", "FR", "DE", "GR",
"HU", "IS", "IE", "IT", "NL", "NO", "PL", "PT", "RO", "RS", "SK", "SI",
"ES", "SE", "CH", "GB")
tfr <- WDI(country = countries, indicator = "SP.DYN.TFRT.IN", start = 1960, end = 2011)
devtools::install_github('rCharts', 'ramnathv', ref='dev')
library(WDI)
library(rCharts)
library(plyr)
countries <- c("AL", "AT", "BE", "BA", "BG", "HR", "CZ", "DK", "FI", "FR", "DE", "GR",
"HU", "IS", "IE", "IT", "NL", "NO", "PL", "PT", "RO", "RS", "SK", "SI",
"ES", "SE", "CH", "GB")
tfr <- WDI(country = countries, indicator = "SP.DYN.TFRT.IN", start = 1960, end = 2011)
install.packages("WDI")
devtools::install_github('rCharts', 'ramnathv', ref='dev')
library(WDI)
library(rCharts)
devtools::install_github('rCharts', 'ramnathv')
library(rCharts)
require(devtools)
install_github('rCharts', 'ramnathv')
library(WDI)
library(rCharts)
library("rCharts", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
detach("package:rCharts", unload=TRUE)
library("rCharts", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
detach("package:rCharts", unload=TRUE)
remove.packages("rCharts")
require(devtools)
install_github('rCharts', 'ramnathv')
library(rCharts)
library(plyr)
library(WDI)
library(rCharts)
install.packages("KernSmooth")
library(KernSmooth)
source('~/.active-rstudio-document', echo=TRUE)
mkdir delete
mkdir del
cd del
pwd data
install.packages("KernSmooth")
load(KernSmooth)
require(KernSmooth)
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
setwd("~/datasciencecoursera/rprogramming")
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x + y
z <- (x + y)
class(z)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
hw1_data <- read.csv("~/datasciencecoursera/rprogramming/hw1_data.csv")
View(hw1_data)
hw1_data <- read.csv("hw1_data.csv")
names(hw1_data)
setwd("~/datasciencecoursera/rprogramming")
hw1_data <- read.csv("hw1_data.csv")
# Column names
names(hw1_data)
# First two rows
head(hw1_data, 2)
# Number of rows/observations
nrow(hw1_data)
tail(hw1_data, 2)
hw1_data["Ozone",47]
hw1_data[47,"Ozone"]
View(hw1_data)
is.na(hw1_data[,"Ozone"])
sum(is.na(hw1_data[,"Ozone"]))
mean(hw1_data[,"Ozone"], na.rm=T)
subset(hw1_data,
Ozone >= 20 & Temp < 10,
select=c(Solar.R))
subset(hw1_data,
Ozone > 31 & Temp > 90,
select=c(Solar.R))
mean(
subset(hw1_data,
Ozone > 31 & Temp > 90,
select=c(Solar.R))
)
subset(hw1_data,
Ozone > 31 & Temp > 90,
select=c(Solar.R))
temp <-
subset(hw1_data,
Ozone > 31 & Temp > 90,
select=c(Solar.R))
mean(temp)
mean(temp)
View(temp)
View(temp)
mean(
(subset(hw1_data,
Ozone > 31 & Temp > 90,
select=c(Solar.R)))[,"Solar.R"]
)
mean(
(subset(hw1_data,
Month == 6,
select=c(Temp)))[,"Temp"]
)
max(
(subset(hw1_data,
Month == 5,
select=c(Ozone)))[,"Ozone"]
,na.rm=T)
x <- list(2, "a", "b", TRUE)
x[[1]]
a <- x[[1]]
class(a)
x <- 1:4
y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
